/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        Two_keys: Two_keys {
            compatible = "zmk,behavior-hold-tap";
            label = "TWO_KEYS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <39>;
            flavor = "tap-preferred";
            quick-tap-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W      &kp E  &kp R      &kp T                       &kp Y  &kp U         &kp I    &kp O          &kp P      &kp BSPC
  &kp ESC  &kp A  &kp S      &kp D  &kp F      &kp G                       &kp H  &kp J         &kp K    &kp L  &kp SEMICOLON       &kp SQT
&kp LSHFT  &kp Z  &kp X      &kp C  &kp V      &kp B                       &kp N  &kp M     &kp COMMA  &kp DOT       &kp FSLH  &kp LEFT_ALT
                         &kp LCTRL  &mo 1  &kp SPACE    &Two_keys LEFT_GUI ENTER  &mo 2  &kp LEFT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
        &kp F1           &kp N1  &kp N2     &kp N3  &kp N4      &kp N5           &kp N6    &kp N7        &kp N8     &kp N9  &kp N0    &kp BSPC
         &mo 4            &none   &none      &none   &none  &kp DELETE      &kp PAGE_UP  &kp HOME        &kp UP    &kp END   &none  &kp DELETE
&kp LEFT_SHIFT  &kp PRINTSCREEN   &none      &none   &mo 3       &none    &kp PAGE_DOWN  &kp LEFT      &kp DOWN  &kp RIGHT   &none      &trans
                                         &kp LCTRL  &trans   &kp ENTER          &kp RET    &trans  &kp LEFT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL             &kp AT          &kp HASH         &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
&kp TILDE     &none         &kp C_PREV  &kp C_PLAY_PAUSE       &kp C_NEXT      &none    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH   &none
&kp LSHFT     &none  &kp C_VOLUME_DOWN        &kp C_MUTE  &kp C_VOLUME_UP      &none    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE   &none
                                               &kp LCTRL           &trans  &kp SPACE      &kp RET     &trans     &kp LEFT_GUI
            >;
        };

        numpad {
            bindings = <
&none  &none  &none   &none   &none   &none    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none  &none  &trans
&none  &none  &none   &none   &none   &none    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &none  &none   &none
&none  &none  &none   &none   &none   &none    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none  &none   &none
                     &trans  &trans  &trans          &trans  &kp NUMBER_0       &kp DOT
            >;
        };

        hardware_control {
            bindings = <
 &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &none   &none  &none  &none  &none  &none
&trans         &none         &kp T    &bt BT_CLR  &out OUT_BLE  &out OUT_USB     &none   &none  &none  &none  &none  &none
 &none         &none         &none         &none         &none         &none     &none   &none  &none  &none  &none  &none
                                          &trans        &trans         &none    &trans  &trans  &none
            >;
        };
    };
};
